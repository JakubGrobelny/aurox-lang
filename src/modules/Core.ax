# Integer arithmetic

defop -  10 left
defop +  10 left
defop *  12 left
defop /  12 left
defop ^  15 left
defop -  18 prefix

define (+) a b : Int -> Int -> Int =
    __add (a, b)
end

define (-) a b : Int -> Int -> Int =
    __sub (a, b)
end

define (*) a b : Int -> Int -> Int =
    __mult (a, b)
end

define (/) a b : Int -> Int -> Int =
    __div (a, b)
end

define (^) a b : Int -> Int -> Int =
    __pow (a, b)
end

define (-) a : Int -> Int =
    __neg a
end

# Float arithmetic

defop +. 10 left
defop -. 10 left
defop *. 12 left
defop /. 12 left
defop ^. 15 left
defop -. 18 prefix

define (+.) a b : Float -> Float -> Float =
    __addf (a, b)
end

define (-.) a b : Float -> Float -> Float =
    __subf (a, b)
end

define (*.) a b : Float -> Float -> Float =
    __multf (a, b)
end

define (/.) a b : Float -> Float -> Float =
    __divf (a, b)
end

define (^.) a b : Float -> Float -> Float =
    __powf (a, b)
end

define (-.) a : Float -> Float =
    __negf a
end

# Functional

defop .  20 right
defop $  0  right
defop |> 0  left

define ($) f x : (a -> b) -> a -> b =
    f x
end

define (.) f g x : (b -> c) -> (a -> b) -> a -> c =
    f (g x)
end

define (|>) x f : a -> (a -> b) -> b =
    f x
end

# Comparisons

defop <  6  none
defop >  6  none
defop <= 6  none
defop >= 6  none
defop == 5  none
defop != 5  none
defop !  18 prefix

define (<) l r : a -> a -> Bool =
    __cmp_less (l, r)
end

define (>) l r : a -> a -> Bool =
    __cmp_great (l, r)
end

define (==) l r : a -> a -> Bool =
    __cmp_eq (l, r)
end

define (!) a : Bool -> Bool =
    __not a
end

define (<=) l r : a -> a -> Bool =
    __cmp_less_eq (l, r)
end

define (>=) l r : a -> a -> Bool =
    __cmp_great_eq (l, r)
end

define (!=) l r : a -> a -> Bool =
    __cmp_neq (l, r)
end
